/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from './friends.component';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/common/src/directives/ng_for';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/template_ref';
import * as import10 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
const styles_FriendsComponent = [];
var renderType_FriendsComponent = null;
class _View_FriendsComponent0 extends import1.AppView {
    constructor(viewUtils, parentInjector, declarationEl) {
        super(_View_FriendsComponent0, renderType_FriendsComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        const parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import9.TemplateRef_(this._appEl_0, viewFactory_FriendsComponent1);
        this._NgFor_0_6 = new import4.NgFor(this._appEl_0.vcRef, this._TemplateRef_0_5, this.parentInjector.get(import10.IterableDiffers), this.ref);
        this._expr_0 = import8.uninitialized;
        this.init([], [this._anchor_0], [], []);
        return null;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import9.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import4.NgFor) && (0 === requestNodeIndex))) {
            return this._NgFor_0_6;
        }
        return notFoundResult;
    }
    detectChangesInternal(throwOnChange) {
        const currVal_0 = this.context.friends;
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_0_6.ngForOf = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (!throwOnChange) {
            this._NgFor_0_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    }
}
export function viewFactory_FriendsComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_FriendsComponent === null)) {
        (renderType_FriendsComponent = viewUtils.createRenderComponentType('/Users/tor/Development/angular2-offline-compiler/src/app/friends.component.html', 0, import11.ViewEncapsulation.None, styles_FriendsComponent));
    }
    return new _View_FriendsComponent0(viewUtils, parentInjector, declarationEl);
}
class _View_FriendsComponent1 extends import1.AppView {
    constructor(viewUtils, parentInjector, declarationEl) {
        super(_View_FriendsComponent1, renderType_FriendsComponent, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import8.uninitialized;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    }
    detectChangesInternal(throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        const currVal_0 = import5.interpolate(1, '\n  ', this.context.$implicit, '    \n');
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    }
}
function viewFactory_FriendsComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_FriendsComponent1(viewUtils, parentInjector, declarationEl);
}
var renderType_FriendsComponent_Host = null;
class _View_FriendsComponent_Host0 extends import1.AppView {
    constructor(viewUtils, parentInjector, declarationEl) {
        super(_View_FriendsComponent_Host0, renderType_FriendsComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    createInternal(rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('friends', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_FriendsComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._FriendsComponent_0_4 = new import2.FriendsComponent();
        this._appEl_0.initComponent(this._FriendsComponent_0_4, [], compView_0);
        compView_0.create(this._FriendsComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    }
    injectorGetInternal(token, requestNodeIndex, notFoundResult) {
        if (((token === import2.FriendsComponent) && (0 === requestNodeIndex))) {
            return this._FriendsComponent_0_4;
        }
        return notFoundResult;
    }
}
function viewFactory_FriendsComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_FriendsComponent_Host === null)) {
        (renderType_FriendsComponent_Host = viewUtils.createRenderComponentType('', 0, null, []));
    }
    return new _View_FriendsComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export const FriendsComponentNgFactory = new import12.ComponentFactory('friends', viewFactory_FriendsComponent_Host0, import2.FriendsComponent);
//# sourceMappingURL=/app/friends.component.ngfactory.js.map