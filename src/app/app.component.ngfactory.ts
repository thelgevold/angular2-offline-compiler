/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './app.component.css.shim';
import * as import1 from '@angular/core/src/render/api';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from './app.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
const styles_AppComponent:any[] = [import0.styles];
var renderType_AppComponent:import1.RenderComponentType = null;
class _View_AppComponent0 extends import2.AppView<import3.AppComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  private _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement) {
    super(_View_AppComponent0,renderType_AppComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'h1',null);
    this._text_1 = this.renderer.createText(this._el_0,'',null);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',null);
    this._expr_0 = import8.uninitialized;
    this.init([],[
      this._el_0,
      this._text_1,
      this._text_2
    ]
    ,[],[]);
    return null;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'\n  ',this.context.title,'\n');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_AppComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement):import2.AppView<import3.AppComponent> {
  if ((renderType_AppComponent === null)) { (renderType_AppComponent = viewUtils.createRenderComponentType('/Users/tor/Development/offline-compiler/src/app/app.component.html',0,import9.ViewEncapsulation.Emulated,styles_AppComponent)); }
  return new _View_AppComponent0(viewUtils,parentInjector,declarationEl);
}
const styles_AppComponent_Host:any[] = [];
var renderType_AppComponent_Host:import1.RenderComponentType = null;
class _View_AppComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  private _appEl_0:import6.AppElement;
  _AppComponent_0_4:import3.AppComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement) {
    super(_View_AppComponent_Host0,renderType_AppComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('app-root',rootSelector,null);
    this._appEl_0 = new import6.AppElement(0,null,this,this._el_0);
    var compView_0:any = viewFactory_AppComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._AppComponent_0_4 = new import3.AppComponent();
    this._appEl_0.initComponent(this._AppComponent_0_4,[],compView_0);
    compView_0.create(this._AppComponent_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.AppComponent) && (0 === requestNodeIndex))) { return this._AppComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_AppComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement):import2.AppView<any> {
  if ((renderType_AppComponent_Host === null)) { (renderType_AppComponent_Host = viewUtils.createRenderComponentType('',0,null,styles_AppComponent_Host)); }
  return new _View_AppComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const AppComponentNgFactory:import10.ComponentFactory<import3.AppComponent> = new import10.ComponentFactory<import3.AppComponent>('app-root',viewFactory_AppComponent_Host0,import3.AppComponent);